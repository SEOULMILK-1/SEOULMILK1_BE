plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// Json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// codef
	implementation 'io.codef.api:easycodef-java:1.0.6'
	implementation 'org.json:json:20210307'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation "com.querydsl:querydsl-sql-spatial:${dependencyManagement.importedProperties['querydsl.version']}"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// configuration-processor
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// html -> pdf 변환 관련
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.20'
	implementation 'com.itextpdf:itext7-core:7.2.5'
	implementation 'org.thymeleaf:thymeleaf:3.1.2.RELEASE'

	// Caffeine Cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.2'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.100.Final:osx-aarch_64'

	// Spring R2DBC
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.r2dbc:r2dbc-mysql:0.8.2.RELEASE'
	implementation 'io.projectreactor:reactor-core:3.4.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

clean {
	delete file(generated)
}